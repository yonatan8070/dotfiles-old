# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

output DP-2 {
  resolution 1920x1080@60Hz
  pos 1920 0
  transform 180
}

output DP-1 {
  resolution 1920x1080@144Hz
  pos 1920 1080
  adaptive_sync off
}

output HDMI-A-1 {
	pos 0 1080
}

# output eDP-1 {
#   resolution 1920x1080@60Hz
#   scale 1.2
# }

gaps inner 0
gaps outer 0

exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1

input * {
  accel_profile "flat"
  pointer_accel 0.0
  scroll_factor 2.5
}

input type:keyboard {
    xkb_layout us,il
    xkb_options caps:super
    xkb_numlock enabled
    xkb_options grp:menu_toggle
    xkb_options grp:win_space_toggle
}

input type:touchpad {
  accel_profile "adaptive"
  pointer_accel 0.0
  scroll_factor 0.7
  tap enabled
  natural_scroll enabled
  drag enabled
}

set $laptop eDP-1
bindswitch --reload lid:on exec swaylock -f && systemctl suspend
bindswitch --reload --locked lid:on exec systemctl suspend

# bindswitch --reload --locked lid:on swaylock & ; systemctl suspend
# bindswitch --reload --locked lid:off output $laptop enable

### Variables
#
# Logo key. Use Mod1 for Alt.l
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu exec $term --class=launcher -e sway-launcher-desktop

# Rule to make runner floating
for_window [app_id="^launcher$"] floating enable, sticky enable, resize set 30 ppt 60 ppt, border pixel 0

### Output configuration
#
# Default wallpaper (more resolutions are available in /usr/share/backgrounds/sway/)
output * bg $(find /home/yonatan/dotfiles/Wallpapers -type f | shuf | head -n 1) fill
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:

exec swayidle -w \
         timeout 1200 'swaylock -f -c 000000' \
         timeout 2000 'swaymsg "output * dpms off"' \
              resume 'swaymsg "output * dpms on"' \
         before-sleep 'swaylock -f -c 000000'

# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Key bindings
#
# Basics:
#
    # Start a terminal
    bindsym --to-code $mod+Return exec $term

    # Kill focused window
    bindsym --to-code $mod+q kill

    # Start your launcher
    bindsym --to-code $mod+r exec $menu

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym --to-code $mod+Shift+r reload

    # Exit sway (logs you out of your Wayland session)
    # bindsym --to-code $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -b 'Yes, exit sway' 'swaymsg exit'
    bindsym --to-code $mod+Shift+e exec wlogout

    # Lock screen
    bindsym --to-code --release $mod+l exec swaylock
    bindsym --to-code $mod+Escape exec wlogout
#
# Moving around:
#
    # Move your focus around
    # bindsym --to-code $mod+$left focus left
    # bindsym --to-code $mod+$down focus down
    # bindsym --to-code $mod+$up focus up
    # bindsym --to-code $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym --to-code $mod+Left focus left
    bindsym --to-code $mod+Down focus down
    bindsym --to-code $mod+Up focus up
    bindsym --to-code $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym --to-code $mod+Shift+$left move left
    bindsym --to-code $mod+Shift+$down move down
    bindsym --to-code $mod+Shift+$up move up
    bindsym --to-code $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym --to-code $mod+Shift+Left move left
    bindsym --to-code $mod+Shift+Down move down
    bindsym --to-code $mod+Shift+Up move up
    bindsym --to-code $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    # bindsym --to-code $mod+1 workspace 1
    # bindsym --to-code $mod+2 workspace 2
    # bindsym --to-code $mod+3 workspace 3
    # bindsym --to-code $mod+4 workspace 4
    # bindsym --to-code $mod+5 workspace 5
    # bindsym --to-code $mod+6 workspace 6
    # bindsym --to-code $mod+7 workspace 7
    # bindsym --to-code $mod+8 workspace 8
    # bindsym --to-code $mod+9 workspace 9
    # bindsym --to-code $mod+0 workspace 10

    # Move focused container to workspace
    # bindsym --to-code $mod+Shift+1 move container to workspace 1
    # bindsym --to-code $mod+Shift+2 move container to workspace 2
    # bindsym --to-code $mod+Shift+3 move container to workspace 3
    # bindsym --to-code $mod+Shift+4 move container to workspace 4
    # bindsym --to-code $mod+Shift+5 move container to workspace 5
    # bindsym --to-code $mod+Shift+6 move container to workspace 6
    # bindsym --to-code $mod+Shift+7 move container to workspace 7
    # bindsym --to-code $mod+Shift+8 move container to workspace 8
    # bindsym --to-code $mod+Shift+9 move container to workspace 9
    # bindsym --to-code $mod+Shift+0 move container to workspace 10
    
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    bindsym --to-code $mod+z workspace 1:Z; move workspace to output DP-1
    bindsym --to-code $mod+x workspace 2:X; move workspace to output DP-1
    bindsym --to-code $mod+c workspace 3:C; move workspace to output DP-1
    bindsym --to-code $mod+v workspace 4:V; move workspace to output DP-1
    bindsym --to-code $mod+a workspace 5:A; move workspace to output HDMI-A-1
    bindsym --to-code $mod+s workspace 6:S; move workspace to output HDMI-A-1
    bindsym --to-code $mod+d workspace 7:D; move workspace to output HDMI-A-1
    bindsym --to-code $mod+f workspace 8:F; move workspace to output HDMI-A-1
    bindsym --to-code $mod+1 workspace 9:1; move workspace to output DP-2
    bindsym --to-code $mod+2 workspace 10:2; move workspace to output DP-2
    bindsym --to-code $mod+3 workspace 11:3; move workspace to output DP-2
    bindsym --to-code $mod+4 workspace 12:4; move workspace to output DP-2

    # Move focused container to workspace 
    bindsym --to-code $mod+Shift+z move container to workspace 1:Z; workspace 1:Z; move workspace to output DP-1
    bindsym --to-code $mod+Shift+x move container to workspace 2:X; workspace 2:X; move workspace to output DP-1
    bindsym --to-code $mod+Shift+c move container to workspace 3:C; workspace 3:C; move workspace to output DP-1
    bindsym --to-code $mod+Shift+v move container to workspace 4:V; workspace 4:V; move workspace to output DP-1
    bindsym --to-code $mod+Shift+a move container to workspace 5:A; workspace 5:A; move workspace to output HDMI-A-1
    bindsym --to-code $mod+Shift+s move container to workspace 6:S; workspace 6:S; move workspace to output HDMI-A-1
    bindsym --to-code $mod+Shift+d move container to workspace 7:D; workspace 7:D; move workspace to output HDMI-A-1
    bindsym --to-code $mod+Shift+f move container to workspace 8:F; workspace 8:F; move workspace to output HDMI-A-1
    bindsym --to-code $mod+Shift+1 move container to workspace 9:1; workspace 9:1; move workspace to output DP-2
    bindsym --to-code $mod+Shift+2 move container to workspace 10:2; workspace 10:2; move workspace to output DP-2
    bindsym --to-code $mod+Shift+3 move container to workspace 11:3; workspace 11:3; move workspace to output DP-2
    bindsym --to-code $mod+Shift+4 move container to workspace 12:4; workspace 12:4; move workspace to output DP-2

	# Allow for Super + tab for switching workspaces
    bindsym $mod+tab workspace back_and_forth
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    # bindsym --to-code $mod+b splith
    # bindsym --to-code $mod+v splitv

    # Switch the current container between different layout styles
    bindsym --to-code $mod+t layout toggle tabbed split
    bindsym --to-code Alt+tab focus next

    # Make the current focus fullscreen
    bindsym --to-code $mod+w fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym --to-code $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym --to-code $mod+space focus mode_toggle

    # Move focus to the parent container
    #bindsym --to-code $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym --to-code $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym --to-code $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym --to-code $left resize shrink width 10px
    bindsym --to-code $down resize grow height 10px
    bindsym --to-code $up resize shrink height 10px
    bindsym --to-code $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym --to-code Left resize shrink width 10px
    bindsym --to-code Down resize grow height 10px
    bindsym --to-code Up resize shrink height 10px
    bindsym --to-code Right resize grow width 10px

    # Return to default mode
    bindsym --to-code Return mode "default"
    bindsym --to-code Escape mode "default"
}
#bindsym --to-code $mod+r mode "resize"

# Border
default_border pixel 0
client.focused          b00000 b00000 ffffff b00000
client.unfocused        484848 484848 ffffff 484848
client.focused_inactive 484848 484848 ffffff 484848

# Volume control
bindsym --to-code XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
bindsym --to-code XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%

# Brightness control
bindsym --to-code XF86MonBrightnessUp exec brightnessctl set +10%
bindsym --to-code XF86MonBrightnessDown exec brightnessctl set 10%-

# Screenshot
bindsym --to-code Print exec grim -g "$(slurp -d)" - | wl-copy
bindsym --to-code Pause exec "/home/yonatan/Misc/color-picker.sh"

bindsym --to-code XF86AudioPlay exec playerctl play-pause

# File with shit specific to each PC
include /home/yonatan/dotfiles/sway/local-config

for_window [app_id=qemu] floating true

exec dbus-update-activation-environment --systemd WAYLAND_DISPLAY XDG_CURRENT_DESKTOP=sway
exec mako
exec "sleep 2 && radeon-profile"

include /etc/sway/config.d/*
